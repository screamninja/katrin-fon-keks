* {
  -webkit-box-sizing: border-box;
  box-sizing: border-box;}

ul {
  padding: 0;
  margin: 0;
  list-style-type: none; }
p {
  font-family: 'Roboto', sans-serif;

}
a {
  font-family: 'Source Sans Pro', sans-serif;
  letter-spacing: 1px;
  text-decoration: none; }

img {
  display: block;
  width: 100%;
  height: 100%; }

.header-burger {
  display: none;
  width: 30px;
  height: 30px;
  position: absolute;
  right: 0;
  top: 20px;
  cursor: pointer; }

.header-burger-line {
  position: absolute;
  width: 100%;
  height: 4px;
  background-color: #6C488F;
  -webkit-transition: 0.3s ease;
  -o-transition: 0.3s ease;
  transition: 0.3s ease; }

.header-burger-line-top {
  top: 0px; }

.header-burger-line-mid {
  top: 10px; }

.header-burger-line-bot {
  top: 20px; }

.header-burger-open .header-burger-line {
  background-color: #fff; }

.header-burger-open .header-burger-line-top {
  top: 10px;
  -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
          transform: rotate(45deg); }

.header-burger-open .header-burger-line-mid {
  top: 10px;
  -webkit-transform: rotate(45deg);
      -ms-transform: rotate(45deg);
          transform: rotate(45deg); }

.header-burger-open .header-burger-line-bot {
  top: 10px;
  -webkit-transform: rotate(-45deg);
      -ms-transform: rotate(-45deg);
          transform: rotate(-45deg); }

.main-btn {
  -webkit-transition: 0.3s ease;
  -o-transition: 0.3s ease;
  transition: 0.3s ease;
  color: #6ED3CF;
  text-transform: uppercase;
  font-family: "Roboto", sans-serif;
  font-weight: 700;
  padding: 15px;
  font-size: 18px; }

.main-btn span {
  -webkit-transition: 0.3s ease;
  -o-transition: 0.3s ease;
  transition: 0.3s ease;
  display: inline-block;
  width: 0;
  height: 0;
  border-top: 4px solid transparent;
  border-left: 7px solid #6ED3CF;
  border-bottom: 4px solid transparent;
  margin-left: 5px; }

.main-btn:hover {
  background-color: #6ED3CF;
  color: #fff; }

.main-btn:hover span {
  border-left-color: #fff; }

.page-logo {
  display: block;
  position: relative; }

.page-logo-cat {
  position: absolute;
  left: -170px;
  top: -25px;
  width: 200px;
  height: 250px;
  -webkit-transition: 0.3s linear;
  -o-transition: 0.3s linear;
  transition: 0.3s linear; }

.page-logo-text {
  font-family: 'Better Together';
  font-size: 60px;
  line-height: 60px;
  color: #000; }

.container {
  max-width: 1200px;
  width: 100%;
  padding: 0 15px;
  margin: 0 auto; }

.page-header {
  height: 100vh;
  background-image: url(../img/header-bg.jpg);
  background-position: 100% 50%;
  background-size: cover;
  position: relative; }

.header-row {
  -webkit-transition: 0.6s ease-in-out;
  -o-transition: 0.6s ease-in-out;
  transition: 0.6s ease-in-out;
  position: fixed;
  z-index: 10;
  top: 0;
  right: 0;
  left: 0;
  background-color: #6C488F;
  border-bottom: 5px solid  #6C488F; }

.header-top-row-column {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex; }

.header-top-row-column span {
  font-family: 'Roboto', sans-serif;
  letter-spacing: 1px;
  font-size: 14px;
  color: #DCE3ED;
  font-weight: bold;
  text-transform: lowercase; }

.header-top-row-column span:first-child {
  padding-right: 5px;
  border-right: 2px solid #FFFC9D; }

.header-top-row-column span:last-child {
  padding-left: 3px; }

.header-top-row-wrapper {
  height: 40px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
  -ms-flex-pack: end;
  justify-content: flex-end;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center; }

.header-bottom-row {
  height: 65px;
  padding: 0 15px;
  background-color: #fff;
  position: relative; }

.header-bottom-row-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center;
  max-width: 1200px;
  width: 100%;
  margin: 0 auto;
  position: relative; }

.header-menu {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: end;
      -ms-flex-pack: end;
          justify-content: flex-end;
  -ms-align-items: center;
  -webkit-box-align: center;
  -ms-flex-align: center;
  align-items: center; }

.header-icon-home {
  width: 35px;
  height: 40px;
  vertical-align: middle;
  fill: #6C488F;
  stroke: #6C488F;
  -webkit-transition: 0.3s ease;
  -o-transition: 0.3s ease;
  transition: 0.3s ease; }

.header-icon-dropdown {
  display: block;
  position: absolute;
  bottom: 10px;
  left: 0;
  right: 0;
  margin-left: auto;
  margin-right: auto;
  width: 0;
  height: 0;
  border-left: 5px solid transparent;
  border-right: 5px solid transparent;
  border-top: 5px solid #7507C9;
  -webkit-transition: 0.3s ease;
  -o-transition: 0.3s ease;
  transition: 0.3s ease; }

.header-dropdown-menu {
  background-color: #fff;
  position: absolute;
  opacity: 0;
  visibility: hidden;
  -webkit-transition: 0.3s ease-in-out;
  -o-transition: 0.3s ease-in-out;
  transition: 0.3s ease-in-out; }

.header-dropdown:hover .header-dropdown-menu {
  opacity: 1;
  visibility: visible; }

.header-dropdown:hover .header-icon-dropdown {
  -webkit-transform: rotate(180deg);
      -ms-transform: rotate(180deg);
          transform: rotate(180deg);
  border-top-color: #fff; }

.header-dropdown:hover {
  background-color: #6C488F;
  color: #fff; }

.header-dropdown:hover .header-link-dropdown {
  color: #fff; }

.header-dropdown-menu a {
  color: #6C488F;
  display: block;
  padding: 20px 15px;
  -webkit-transition: 0.3s ease;
  -o-transition: 0.3s ease;
  transition: 0.3s ease;
  text-align: center; }

.header-dropdown-menu a:hover {
  background-color: #6C488F;
  color: #fff; }

.header-link {
  position: relative;
  line-height: 65px;
  font-weight: 400;
  font-size: 16px;
  letter-spacing: 0.5px;
  color: #6C488F;
  display: block;
  text-align: center;
  padding: 0 10px;
  -webkit-transition: 0.3s ease;
  -o-transition: 0.3s ease;
  transition: 0.3s ease; }

.header-link:hover {
  background-color: #6C488F;
  color: #fff; }

.header-link:hover .header-icon-home {
  fill: #fff;
  stroke: #fff; }

.header-link-special {
  background-color: #bd002a;
  padding: 0 15px;
  font-weight: 800;
  color: #fff; }

.header-link-special:hover {
  color: #bd002a;
  background-color: #fff; }

.header-link-bold {
  font-weight: 900; }

.header-cake-icon span {
  display: block;
  position: absolute;
  width: 35px;
  height: 35px;
  top: -15px;
  right: 15px; }

.header-cake-icon span svg {
  width: 100%;
  height: 100%;
  position: absolute;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0; }

.top-section-wrapper {
  position: relative;
  max-width: 1200px;
  width: 100%;
  height: 100%;
  margin: 0 auto; }

.top-section-text {
  position: absolute;
  top: calc(50% + 60px);
  -webkit-transform: translateY(-50%);
  -ms-transform: translateY(-50%);
  transform: translateY(-50%);
  max-width: 470px;
  width: 100%;
  color: #DCE3ED; }

.top-section-text p:first-child {
  font-weight: 800;
  letter-spacing: 1px;
  text-transform: uppercase;
  font-size: 14px; }

.top-section-text .large-text {
  font-family: 'Roboto', sans-serif;
  color: #F37A29;
  font-weight: 900;
  letter-spacing: 2px;
  font-size: 82px;
  line-height: 72px;
  margin: 20px 0; }

.top-section-text .light-text {
  font-size: 18px;
  letter-spacing: 0.5px; }

.advantages-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -ms-flex-wrap: wrap;
  flex-wrap: wrap;
  padding: 30px 0; }

.advantages-item {
  padding: 0 30px;
  width: 25%; }

.advantages-caption {
  font-weight: 700;
  text-transform: uppercase;
  margin: 10px 0;
  font-size: 18px; }

.advantages-text {
  font-size: 16px; }

.banners-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  margin-bottom: 30px; }

.banners-item {
  color: #DCE3ED;
  position: relative;
  background-color: #6C488F;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-orient: vertical;
  -webkit-box-direction: normal;
  -ms-flex-direction: column;
  flex-direction: column;
  max-width: 570px;
  width: 100%;
  height: 300px;
  padding: 10px;
  padding-top: 40px; }
.banners-item-overlay {
  position: absolute;
  width: 100%;
  height: 100%;
  left: 0;
  top: 0;
  right: 0;
  bottom: 0;

}
.banners-item p {
  font-size: 18px;
  font-family: 'Source Sans Pro', sans-serif;
 }

.banners-item-left {
  margin-right: 30px;
  background-image: url(../img/best_price.jpg);
  background-size: cover;
  text-align: right;
  -ms-align-items: flex-end;
  -webkit-box-align: end;
  -ms-flex-align: end;
  align-items: flex-end; }

.banners-item-left .banners-btn {
  right: 10px; }

.banners-item-right {
  background-image: url(../img/top_sales.jpg);
  background-size: cover;
  text-align: left;
  -ms-align-items: flex-start;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start; }

.banners-item-right .banners-btn {
  left: 10px; }

.banners-item-description {
  max-width: 450px;
  width: 100%; }

.banners-item-caption {
  color: #F37A29;
  font-family: 'Roboto', sans-serif;
  font-size: 30px;
  font-weight: 900;
  letter-spacing: 1px;
  text-transform: uppercase;
  line-height: 30px;
  margin-top: 0;
  margin-bottom: 15px; }

.banners-item-addition {
  font-family: 'Source Sans Pro', sans-serif;
  font-weight: 700;
  letter-spacing: 0.5px;
  text-transform: uppercase;
  font-size: 14px;
  margin: 0; }

.banners-price {
  font-family: 'Roboto', sans-serif;
  font-size: 30px;
  text-transform: uppercase;
  letter-spacing: 0.5px;
  font-weight: 900;
  margin-bottom: 20px; }

.banners-btn {
  position: absolute;
  bottom: 10px;
  color: #6ED3CF;
  text-transform: uppercase;
  font-weight: 700;
  padding: 15px;
  -webkit-transition: 0.3s ease;
  -o-transition: 0.3s ease;
  transition: 0.3s ease; }

.banners-btn:hover {
  background-color: #fff;
  color: #6ED3CF; }

.banner {
  width: 100%;
  height: 270px;
  background-image: url(../img/banner.jpg);
  background-size: contain;
  background-repeat: no-repeat;
  position: relative;
  margin-bottom: 30px;
  padding-top: 50px;
  padding-left: 50px; }

.banner-large-text {
  font-family: 'Roboto', sans-serif;
  letter-spacing: 0.5px;
  font-size: 36px;
  line-height: 40px;
  font-weight: 900;
  text-transform: uppercase;
  color: #00b8b8;
  margin-top: 0;
  margin-bottom: 15px; }

.banner-info {
  font-family: 'Source Sans Pro', sans-serif;
  font-size: 14px;
  color: #636363;
  letter-spacing: 1px;
  margin-bottom: 20px; }

.banner-top-p {
  font-family: 'Roboto', sans-serif;
  font-weight: 900;
  letter-spacing: 1px;
  font-size: 14px;
  color: #f7941d;
  text-transform: uppercase;
  margin: 0; }

.page-footer {
  padding: 25px 0;
  background-color: #6C488F;
  color: #DCE3ED;
  position: relative; }

.page-footer a {
  color: #DCE3ED; }

.page-footer-wrapper {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center; }

.footer-column {
  position: relative; }

.footer-column {
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: center;
  -ms-flex-pack: center;
  justify-content: center;
  width: 33%; }

.footer-column-description-text {
  color: #300154;
  font-size: 18px;
  margin: 10px 0; }

.footer-icon-wrapper {
  text-align: center; }

.footer-copyright {
  text-align: center;
  font-size: 16px; }

.footer-social-list {
  padding-top: 60px;
  display: -webkit-box;
  display: -ms-flexbox;
  display: flex;
  -webkit-box-pack: justify;
  -ms-flex-pack: justify;
  justify-content: space-between;
  -webkit-box-align: start;
  -ms-flex-align: start;
  align-items: flex-start; }

.footer-social-link {
  display: block;
  margin: 0 15px;
  font-size: 18px; }

.footer-social-link:hover {
  color: #FFFC9D; }

.footer-social-link:hover .footer-social-icon {
  fill: #FFFC9D; }

.footer-social-icon {
  max-width: 25px;
  width: 100%;
  height: 25px;
  margin-right: 5px;
  fill: #DCE3ED;
  -webkit-transition: 0.3s ease;
  -o-transition: 0.3s ease;
  transition: 0.3s ease; }

.footer-link {
  display: block;
  font-size: 18px;
  letter-spacing: 0.5px;
  padding: 5px 0;
  -webkit-transition: 0.3s ease;
  -o-transition: 0.3s ease;
  transition: 0.3s ease; }

.footer-link:hover {
  color: #FFFC9D; }

.footer-column-image {
  text-align: center; }

.footer-animate-icon {
  width: 170px;
  height: 170px;
  -webkit-animation: move 3s ease-out infinite;
  animation: move 3s ease-out infinite; }

@-webkit-keyframes move {
  50% {
    -webkit-transform: translate(0, 20px);
    transform: translate(0, 20px); } }

@keyframes move {
  50% {
    -webkit-transform: translate(0, 20px);
    transform: translate(0, 20px); } }

@media only screen and (max-width: 1280px) {
  .page-logo-text {
    font-size: 42px; }
  .header-bottom-row-wrapper {
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center; }
  .page-logo-cat {
    width: 100px;
    height: 125px;
    left: -75px; }
  .top-section-text {
    padding: 0 15px; } }

@media only screen and (max-width: 1130px) {
  .header-link {
    font-size: 14px;
    padding: 0 5px; } }

@media only screen and (max-width: 975px) {
  .header-burger {
    display: block; }
  .header-nav {
    -webkit-transition: 0.3s ease;
    -o-transition: 0.3s ease;
    transition: 0.3s ease;
    position: fixed;
    left: 0;
    top: 0;
    right: 0;
    bottom: 0;
    width: 100%;
    height: 100%;
    background-color: #6C488F;
    opacity: 0;
    visibility: hidden; }
  .header-nav-show {
    opacity: 1;
    visibility: visible; }
  .header-menu {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    -webkit-box-pack: center;
        -ms-flex-pack: center;
            justify-content: center;
    height: 100%; }
  .header-dropdown-menu {
    position: relative;
    background-color: #6ED3CF;
    color: #fff;
    display: none;
    opacity: 1;
    visibility: visible; }
  .header-dropdown-menu-show {
    display: block; }
  .header-icon-dropdown {
    border-top-color: #fff;
    top: 50%;
    left: 30%;
    -webkit-transform: translate(-50%, -50%);
        -ms-transform: translate(-50%, -50%);
            transform: translate(-50%, -50%); }
  .header-dropdown:hover .header-icon-dropdown {
    -webkit-transform: rotate(0);
        -ms-transform: rotate(0);
            transform: rotate(0); }
  .header-dropdown-menu a {
    color: #fff;
    padding: 10px 0; }
  .header-cake-icon span {
    display: none; }
  .header-menu li {
    width: 100%; }
  .header-link {
    font-size: 18px;
    line-height: 50px;
    color: #fff; }
  .header-icon-home {
    fill: #fff;
    stroke: #fff; }
  .header-link-special {
    background-color: inherit; }
  .header-link-special:hover {
    background-color: #6C488F;
    color: #fff; }
  .header-bottom-row-wrapper {
    -webkit-box-pack: start;
        -ms-flex-pack: start;
            justify-content: flex-start; }
  .page-logo {
    left: 50px; }
  .advantages-item {
    width: 50%;
    padding: 0 5px; } }

@media only screen and (max-width: 900px) {
  .banner {
    padding-top: 25px;
    padding-left: 25px;
    height: 190px; }
  .banner-large-text {
    font-size: 24px;
    margin: 0; }
  .banner-info {
    margin: 0; } }

@media only screen and (max-width: 780px) {
  .banners-wrapper {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column; }
  .banners-item {
    max-width: 100%; }
  .banners-item-left {
    margin: 0;
    margin-bottom: 15px; }
  .page-footer-wrapper {
    -ms-flex-wrap: wrap;
        flex-wrap: wrap; }
  .footer-social-list {
    padding-top: 10px; }
  .footer-column {
    width: 50%; }
  .footer-column:nth-child(2) {
    width: 100%;
    -webkit-box-ordinal-group: 4;
        -ms-flex-order: 3;
            order: 3; } }

@media only screen and (max-width: 555px) {
  .footer-social-link {
    margin: 0 5px; } }

@media only screen and (max-width: 630px) {
  .banner {
    padding: 5px;
    background-image: none;
    height: 110px;
    border: 3px solid #00b8b8; }
  .banner-large-text {
    font-size: 18px; }
  .banner-btn {
    font-size: 16px;
    padding: 5px; } }

@media only screen and (max-width: 480px) {
  .advantages-item {
    width: 100%;
    margin-bottom: 15px; }
  .footer-column {
    width: 100%;
    margin: 5px 0; }
  .footer-column:nth-child(2) {
    -webkit-box-pack: end;
        -ms-flex-pack: end;
            justify-content: flex-end; } }

@media only screen and (max-width: 390px) {
  .banners-item-caption {
    font-size: 24px; }
  .banners-price {
    margin-bottom: 5px; }
  .banners-item-description {
    margin: 0; }
  .banners-item {
    height: 250px;
    padding-top: 5px; }
  .page-logo-text {
    font-size: 32px; }
  .header-top-row-column {
    -webkit-box-orient: vertical;
    -webkit-box-direction: normal;
        -ms-flex-direction: column;
            flex-direction: column;
    text-align: right; }
  .header-top-row-column span:first-child {
    border-right: none;
    padding: 0; }
  .top-section-text .large-text {
    font-size: 60px;
    line-height: 60px; } }

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
